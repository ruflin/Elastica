<?xml version="1.0" encoding="UTF-8"?>
<project name="Elastica" default="build" basedir=".">

	<property name="source" value="${basedir}/lib"/>

	<target name="clean">
		<!--    Clean    up    -->
		<delete dir="build"/>
		<!-- Create build directories -->
		<mkdir dir="${basedir}/build/api"/>
		<mkdir dir="${basedir}/build/code-browser"/>
		<mkdir dir="${basedir}/build/coverage"/>
		<mkdir dir="${basedir}/build/logs"/>
		<mkdir dir="${basedir}/build/pdepend"/>
	</target>

	<target name="phpunit" depends="clean">
		<exec executable="phpunit" dir="${basedir}/test" failonerror="off" />
	</target>

	<!-- Run pdepend, phpmd, phpcpd, and phpcs in parallel -->
	<target name="parallelTasks">
		<parallel threadCount="2">
			<sequential>
				<antcall target="pdepend"/>
				<antcall target="phpmd"/>
			</sequential>
			<antcall target="phpcpd"/>
			<antcall target="phpcs"/>
			<antcall target="docblox"/>
			<antcall target="phpcb"/>
		</parallel>
	</target>

	<!-- Generate jdepend.xml and software metrics charts -->
	<target name="pdepend">
		<exec executable="pdepend">
			<arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
			<arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
			<arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
			<arg path="${source}" />
		</exec>
	</target>

	<!-- Generate pmd.xml -->
	<target name="phpmd">
		<exec executable="phpmd">
			<arg path="${source}" />
			<arg value="xml" />
			<arg value="codesize,unusedcode,naming,design" />
			<arg value="--reportfile" />
			<arg value="${basedir}/build/logs/pmd.xml" />
		</exec>
	</target>

	<!-- Generate pmd-cpd.xml -->
	<target name="phpcpd">
		<exec executable="phpcpd">
			<arg line="--log-pmd ${basedir}/build/logs/pmd-cpd.xml ${source}" />
		</exec>
	</target>

	<!-- Generate checkstyle.xml -->
	<target name="phpcs">
		<exec executable="phpcs" output="/dev/null">
			<arg line="--report=checkstyle --report-file=${basedir}/build/logs/checkstyle.xml --standard=${basedir}/test/CodeSniffer/Standards/Xodoa ${source}" />
		</exec>
	</target>

	<target name="phploc" description="Generate phploc.csv">
		<exec executable="phploc">
		<arg value="--log-csv" />
		<arg value="${basedir}/build/logs/phploc.csv" />
		<arg path="${source}" />
		</exec>
	</target>

	<!-- Generate API documentation -->
	<target name="docblox">
		<exec executable="docblox">
			<arg line="run" />
		</exec>
	</target>

	<target name="phpcb">
		<exec executable="phpcb">
			<arg line="--log ${basedir}/build/logs
					--source ${source}
					--output ${basedir}/build/code-browser" />
		</exec>
	</target>

	<target name="build" depends="clean,parallelTasks,phpunit"/>

	<!-- Checkstyle with human output -->
	<target name="codesniffer">
		<exec executable="phpcs">
			<arg line="--standard=${basedir}/test/CodeSniffer/Standards/Xodoa ${source}" />
		</exec>
	</target>

	<!-- Setups test environment -->
	<target name="setup" description="setups php libs for">
		<exec executable="pear">
			<arg line="channel-discover pear.pdepend.org" />
		</exec>
		<exec executable="pear">
			<arg line="channel-discover pear.phpmd.org" />
		</exec>
		<exec executable="pear">
			<arg line="channel-discover pear.phpunit.de" />
		</exec>
		<exec executable="pear">
			<arg line="channel-discover components.ez.no" />
		</exec>
		<exec executable="pear">
			<arg line="channel-discover pear.symfony-project.com" />
		</exec>
		<exec executable="pear">
			<arg line="channel-discover pear.michelf.com" />
		</exec>
		<exec executable="pear">
			<arg line="channel-discover pear.docblox-project.org" />
		</exec>

		<exec executable="pear">
			<arg line="install pdepend/PHP_Depend" />
		</exec>
		<exec executable="pear">
			<arg line="install phpmd/PHP_PMD" />
		</exec>
		<exec executable="pear">
			<arg line="install phpunit/phpcpd" />
		</exec>
		<exec executable="pear">
			<arg line="install phpunit/phploc" />
		</exec>
		<exec executable="pear">
			<arg line="install --alldeps channel://pear.docblox-project.org/DocBlox-0.15.1" />
		</exec>
		<exec executable="pear">
			<arg line="install PHP_CodeSniffer" />
		</exec>
		<exec executable="pear">
			<arg line="install --alldeps phpunit/PHP_CodeBrowser" />
		</exec>
		<exec executable="pear">
			<arg line="install --alldeps phpunit/PHPUnit" />
		</exec>
	</target>

	<target name="gource" description="Visualize repos with gource">
		<exec executable="gource">
			<arg line="--log-format git" />
			<arg line="--seconds-per-day 0.1" />
			<arg line="--title 'Elastica (https://github.com/ruflin/Elastica)'" />
			<arg line="--user-scale 1" />
			<arg line="--max-user-speed 50" />
		</exec>
	</target>
</project>