language: php

services:
  - docker

sudo: false

cache:
  directories:
    - $HOME/.composer/cache/files
    - $HOME/.phive

#php:
#  - 7.2
#  - 7.3
#  - 7.4

matrix:
  fast_finish: true
  include:
    # Coding-styles are running on the lowest version of PHP
    # plus: we test the installation on lowest requirements for PHP 7.2
#    - php: 7.2
#      env: RUN_CS=true COMPOSER_FLAGS="--prefer-stable --prefer-lowest"
#
#    # Run tests only on the lowest version of PHP 7.2, with all versions of ElasticSearch server
#    - php: 7.2
#      env: RUN_TEST=true START_ES_VERSION=75
#    - php: 7.2
#      env: RUN_TEST=true START_ES_VERSION=74
#    - php: 7.2
#      env: RUN_TEST=true START_ES_VERSION=73
#    - php: 7.2
#      env: RUN_TEST=true START_ES_VERSION=72
    # Run coverage on lowest version of ElasticSearch, no need to run it for all variations
    - php: 7.2
      env: RUN_TEST=coverage START_ES_VERSION=71

before_install:
  - if [[ "$RUN_TEST" != "coverage" ]]; then phpenv config-rm xdebug.ini || true; fi

install:
  - travis_retry make composer-update

before_script:
  # vm.max_map_count=262144 is needed by ES to properly spin up the nodes, otherwise the ES bootstrap checks will fail
  - sudo sysctl -w vm.max_map_count=262144
  - php --version
  - docker --version
  - docker-compose --version

script:
  - if [[ "$RUN_CS" = "true" ]]; then make run-phpcs; fi
  - if [[ "$START_ES_VERSION" != "" ]]; then docker-compose --file=docker/docker-compose.yml --file=docker/docker-compose.es$START_ES_VERSION.yml up --detach; fi
  - if [[ "$RUN_TEST" != "" ]]; then make install-tools; fi
  # Waiting for ES to be up and running, and all nodes to be in sync
  - if [[ "$RUN_TEST" != "" ]]; then echo "Waiting for ES to be up and running"; sleep 7; timeout 3m bash -c 'until curl -XGET http://127.0.0.1:9200; do sleep 7; done'; fi
  - if [[ "$RUN_TEST" = "true" ]]; then make run-phpunit; fi
  - if [[ "$RUN_TEST" = "coverage" ]]; then make run-phpunit-coverage; fi

#  - if [[ "$START_ES_VERSION" != "" ]]; then docker-compose --file=docker/docker-compose.yml --file=docker/docker-compose.es$START_ES_VERSION.yml logs; fi

# after_success:
#   - if [[ $COVERAGE = true ]]; then wget https://scrutinizer-ci.com/ocular.phar; fi
#   - if [[ $COVERAGE = true ]]; then php ocular.phar code-coverage:upload --format=php-clover build/coverage.xml; fi
#
#
#
# sudo: required
# dist: trusty
#
# group: edge
#
# services:
#   - docker
#
# branches:
#   only:
#     - master
#
# env:
#   global:
#     - DOCKER_VERSION=17.09.0
#     - DOCKER_COMPOSE_VERSION=1.17.1
#   matrix:
#     - TARGET="72"
#     - TARGET="73"
#     - TARGET="74"
#     - TARGET="Lint"
#
# before_install:
#   # check running "docker engine" and "docker-compose" version on travis
#   - docker --version
#   - docker-compose --version
#
#   # list docker-engine versions, usefull to update the docker engine on travis and trusty
# #  - sudo apt-cache madison docker-engine
#
#   # update docker engine to the desired version
#   - sudo apt-get -o Dpkg::Options::="--force-confnew" install -y docker-ce=${DOCKER_VERSION}~ce-0~ubuntu --allow-downgrades
#
#   - sudo rm /usr/local/bin/docker-compose
#   - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
#   - chmod +x docker-compose
#   - sudo mv docker-compose /usr/local/bin
#
# before_script:
#   - sudo sysctl -w vm.max_map_count=262144 # Needed by ES to properly spin up the nodes, otherwise the bootstrap checks will fail
#
# script:
#   - if [ "$TARGET" != "Lint" ] ; then make tests TARGET=$TARGET ; fi
#   - if [ "$TARGET" == "Lint" ] ; then make check-style ; fi
#
# after_script:
#   - cat /var/log/elasticsearch/*.log
#   - cat /var/log/nginx/*.log
#   - sudo rm composer.lock && sudo composer require satooshi/php-coveralls dev-master --no-ansi --no-progress --no-interaction
#

after_success:
  - travis_retry make run-coveralls
